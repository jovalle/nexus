services:
  gotenberg:
    command:
      - "gotenberg"
      - "--chromium-disable-javascript=true"
      - "--chromium-allow-list=file:///tmp/.*"
    container_name: gotenberg
    image: gotenberg/gotenberg
    restart: unless-stopped
  immich:
    container_name: immich
    depends_on:
      - postgres
      - redis
    environment:
      DB_DATABASE_NAME: ${IMMICH_DB_NAME:?immich db name required}
      DB_HOSTNAME: postgres
      DB_PASSWORD: ${IMMICH_DB_PASSWORD:?immich db password required}
      DB_USERNAME: ${IMMICH_DB_USER:?immich db user required}
      IMMICH_VERSION: ${IMMICH_VERSION:-release}
      NODE_ENV: production
      REDIS_DBINDEX: 0
      REDIS_HOSTNAME: redis
      REDIS_PORT: 6379
      UPLOAD_LOCATION: /usr/src/app/upload
    image: ghcr.io/immich-app/immich-server:${IMMICH_VERSION:-release}
    labels:
      homepage.description: Photo management and backup
      homepage.group: Data
      homepage.href: https://photos.${DOMAIN:?no domain defined}
      homepage.icon: immich
      homepage.name: Immich
      homepage.widget.key: ${IMMICH_API_KEY:-}
      homepage.widget.type: immich
      homepage.widget.url: http://immich:2283
      homepage.widget.version: 2
      traefik.enable: true
      traefik.http.routers.immich.rule: Host(`immich.${DOMAIN:?no domain defined}`) || Host(`photos.${DOMAIN:?no domain defined}`)
    ports:
      - 2283:2283
    restart: unless-stopped
    volumes:
      - ${DATA_PATH:?data path not defined}/immich/upload:/usr/src/app/upload
      - /etc/localtime:/etc/localtime:ro
  immich-machine-learning:
    container_name: immich-machine-learning
    environment:
      DB_DATABASE_NAME: ${IMMICH_DB_NAME:?immich db name required}
      DB_HOSTNAME: ${IMMICH_DB_HOSTNAME:-?immich db hostname required}
      DB_PASSWORD: ${IMMICH_DB_PASSWORD:?immich db password required}
      DB_USERNAME: ${IMMICH_DB_USER:?immich db user required}
      IMMICH_VERSION: ${IMMICH_VERSION:-release}
      NODE_ENV: production
    image: ghcr.io/immich-app/immich-machine-learning:${IMMICH_VERSION:-release}
    restart: unless-stopped
    volumes:
      - ${DATA_PATH:?data path not defined}/immich/cache:/cache
  mariadb:
    command: --transaction-isolation=READ-COMMITTED --log-bin=binlog --binlog-format=ROW
    container_name: mariadb
    environment:
      MARIADB_RANDOM_ROOT_PASSWORD: yes
      MYSQL_DATABASE: ${MYSQL_DATABASE:?mariadb database not defined}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD:?mariadb password not defined}
      MYSQL_USER: ${MYSQL_USER:?mariadb user not defined}
    image: mariadb:10.11
    restart: unless-stopped
    volumes:
      - ${DATA_PATH:?data path not defined}/mariadb:/var/lib/mysql
  nextcloud:
    container_name: nextcloud
    depends_on:
      - postgres
      - redis
    environment:
      NEXTCLOUD_ADMIN_PASSWORD: ${NEXTCLOUD_ADMIN_PASSWORD:?nextcloud admin password required}
      NEXTCLOUD_ADMIN_USER: ${NEXTCLOUD_ADMIN_USER:?nextcloud admin user required}
      NEXTCLOUD_TRUSTED_DOMAINS: "nextcloud.${DOMAIN:?no domain defined} cloud.${DOMAIN:?no domain defined} ${HOST_IP:?no host ip defined}"
      POSTGRES_DATABASE: ${NEXTCLOUD_DB_NAME:-nextcloud database name not defined}
      POSTGRES_HOST: postgres
      POSTGRES_PASSWORD: ${NEXTCLOUD_DB_PASSWORD:?nextcloud database password not defined}
      POSTGRES_USER: ${NEXTCLOUD_DB_USER:?nextcloud database user not defined}
      REDIS_HOST: redis
    image: nextcloud
    labels:
      homepage.description: Cloud storage and collaboration
      homepage.group: Data
      homepage.href: https://nextcloud.${DOMAIN:?no domain defined}
      homepage.icon: nextcloud
      homepage.name: Nextcloud
      homepage.widget.password: ${NEXTCLOUD_ADMIN_PASSWORD:?nextcloud admin password required}
      homepage.widget.type: nextcloud
      homepage.widget.url: https://nextcloud.${DOMAIN:?no domain defined}
      homepage.widget.username: ${NEXTCLOUD_ADMIN_USER:?nextcloud admin user required}
      traefik.enable: true
      traefik.http.middlewares.nextcloud-dav.replacepathregex.regex: ^/.well-known/ca(l|rd)dav
      traefik.http.middlewares.nextcloud-dav.replacepathregex.replacement: /remote.php/dav/
      traefik.http.routers.nextcloud.entrypoints: websecure
      traefik.http.routers.nextcloud.middlewares: nextcloud-dav
      traefik.http.routers.nextcloud.rule: Host(`nextcloud.${DOMAIN:?no domain defined}`) || Host(`cloud.${DOMAIN:?no domain defined}`)
    ports:
      - 8888:80
    restart: unless-stopped
    volumes:
      - ${DATA_PATH:?data path not defined}/nextcloud:/var/www/html
      - ${NEXTCLOUD_DATA_PATH:?nextcloud data path not defined}:/var/www/html/data
  paperless:
    container_name: paperless
    depends_on:
      - gotenberg
      - tika
    environment:
      PAPERLESS_ADMIN_MAIL: "${PAPERLESS_ADMIN_MAIL:?paperless admin mail not defined}"
      PAPERLESS_ADMIN_PASSWORD: ${PAPERLESS_ADMIN_PASSWORD:?paperless admin password not defined}
      PAPERLESS_ADMIN_USER: ${PAPERLESS_ADMIN_USER:?paperless admin user not defined}
      PAPERLESS_DBENGINE: postgres
      PAPERLESS_DBHOST: postgres
      PAPERLESS_DBPASS: ${PAPERLESS_DB_PASSWORD:?paperless db password not defined}
      PAPERLESS_DBPORT: 5432
      PAPERLESS_DBUSER: ${PAPERLESS_DB_USERNAME:?paperless db username not defined}
      PAPERLESS_REDIS: redis://valkey:6379
      PAPERLESS_TIKA_ENABLED: 1
      PAPERLESS_TIKA_ENDPOINT: http://tika:9998
      PAPERLESS_TIKA_GOTENBERG_ENDPOINT: http://gotenberg:3000
      PAPERLESS_URL: https://paperless.${DOMAIN:?no domain defined}
    image: ghcr.io/paperless-ngx/paperless-ngx
    labels:
      homepage.description: Paperless Document Management
      homepage.group: Data
      homepage.href: https://paperless.${DOMAIN:?no domain defined}
      homepage.icon: paperless
      homepage.name: Paperless
      homepage.widget.fields: '["total", "inbox"]'
      homepage.widget.password: ${PAPERLESS_ADMIN_PASSWORD:?paperless admin password not defined}
      homepage.widget.type: paperlessngx
      homepage.widget.url: http://paperless:8000
      homepage.widget.username: ${PAPERLESS_ADMIN_USER:?paperless admin username not defined}
      traefik.enable: true
      traefik.http.routers.paperless.rule: Host(`paperless.${DOMAIN:?no domain defined}`)
      traefik.http.services.paperless.loadbalancer.server.port: 8000
    restart: unless-stopped
    volumes:
      - ${DATA_PATH:?data path not defined}/paperless/data:/usr/src/paperless/data
      - ${DATA_PATH:?data path not defined}/paperless/media:/usr/src/paperless/media
      - ${DATA_PATH:?data path not defined}/paperless/export:/usr/src/paperless/export
      - ${DATA_PATH:?data path not defined}/paperless/consume:/usr/src/paperless/consume
  pgadmin:
    container_name: pgadmin
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      PGADMIN_CONFIG_ENHANCED_COOKIE_PROTECTION: "False"
      PGADMIN_CONFIG_MASTER_PASSWORD_REQUIRED: "True"
      PGADMIN_CONFIG_SERVER_MODE: "False"
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_EMAIL:?pgadmin email not defined}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASSWORD:?pgadmin password not defined}
    image: dpage/pgadmin4
    labels:
      homepage.description: PostgreSQL Management Tool
      homepage.group: Data
      homepage.href: https://pgadmin.${DOMAIN:?no domain defined}
      homepage.icon: postgres
      homepage.name: Postgres
      traefik.enable: true
      traefik.http.routers.pgadmin.rule: Host(`pgadmin.${DOMAIN:?no domain defined}`)
      traefik.http.services.pgadmin.loadbalancer.server.port: 80
    restart: unless-stopped
    user: "5050:5050"
    volumes:
      - ${DATA_PATH:?data path not defined}/pgadmin/pgpass:/tmp/pgpass:ro
      - ${DATA_PATH:?data path not defined}/pgadmin/servers.json:/pgadmin4/servers.json:ro
      - ${DATA_PATH:?data path not defined}/pgadmin/data:/var/lib/pgadmin
  postgres:
    container_name: postgres
    deploy:
      resources:
        limits:
          cpus: "2"
          memory: 2G
        reservations:
          cpus: "0.5"
          memory: 512M
    environment:
      POSTGRES_DB: postgres
      POSTGRES_HOST_AUTH_METHOD: scram-sha-256
      POSTGRES_INITDB_ARGS: "--encoding: UTF8"
      POSTGRES_PASSWORD: "${POSTGRES_ROOT_PASSWORD:?postgres password not defined}"
      POSTGRES_USER: postgres
    healthcheck:
      interval: 30s
      retries: 5
      start_period: 30s
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      timeout: 10s
    image: pgvector/pgvector:pg16
    ports:
      - 5432:5432
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    volumes:
      - ${DATA_PATH:?data path not defined}/postgres/data:/var/lib/postgresql/data
  redis:
    container_name: redis
    image: redis
    restart: unless-stopped
    volumes:
      - ${DATA_PATH:?data path not defined}/redis:/data
  syncthing:
    container_name: syncthing
    image: syncthing/syncthing
    labels:
      homepage.description: File synchronization
      homepage.group: Data
      homepage.href: https://syncthing.${DOMAIN:?no domain defined}
      homepage.icon: syncthing
      homepage.name: Syncthing
      traefik.enable: true
      traefik.http.routers.syncthing.rule: Host(`syncthing.${DOMAIN:?no domain defined}`)
      traefik.http.services.syncthing.loadbalancer.server.port: 8384
    ports:
      - 8384:8384
      - 22000:22000/tcp
      - 22000:22000/udp
      - 21027:21027/udp
    restart: unless-stopped
    volumes:
      - ${DATA_PATH:?data path not defined}/syncthing:/var/syncthing
  tika:
    container_name: tika
    image: apache/tika
    restart: unless-stopped
  valkey:
    command: --save 60 1 --loglevel warning
    container_name: valkey
    healthcheck:
      interval: 30s
      retries: 5
      start_period: 20s
      test: [ "CMD-SHELL", "valkey-cli ping | grep PONG" ]
      timeout: 3s
    image: valkey/valkey
    ports:
      - 6379:6379
    restart: unless-stopped
    volumes:
      - ${DATA_PATH:?data path not defined}/valkey:/data