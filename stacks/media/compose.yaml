services:
  bazarr:
    container_name: bazarr
    environment: &a1
      PGID: ${PGID:-1000}
      PUID: ${PUID:-1000}
      TZ: ${TZ:-America/New_York}
    image: lscr.io/linuxserver/bazarr
    labels:
      homepage.description: Subtitle Curator
      homepage.group: Media
      homepage.href: https://bazarr.${DOMAIN:?no domain defined}
      homepage.icon: bazarr
      homepage.name: Bazarr
      homepage.widget.key: ${BAZARR_API_KEY:-}
      homepage.widget.type: bazarr
      homepage.widget.url: http://bazarr:6767
      traefik.enable: true
      traefik.http.routers.bazarr.middlewares: authelia@docker
      traefik.http.routers.bazarr.rule: Host(`bazarr.${DOMAIN:?no domain defined}`) || Host(`subs.${DOMAIN:?no domain defined}`)
      traefik.http.services.bazarr.loadbalancer.server.port: 6767
    restart: unless-stopped
    volumes:
      - ${DATA_PATH:?data path not defined}/bazarr:/config
      - ${MEDIA_PATH:-?media path not defined}/movies:/movies
      - ${MEDIA_PATH:-?media path not defined}/series:/series
  flaresolverr:
    container_name: flaresolverr
    environment:
      <<: *a1
      CAPTCHA_SOLVER: none
      LOG_HTML: false
      LOG_LEVEL: info
    image: ghcr.io/flaresolverr/flaresolverr
    labels:
      traefik.enable: true
      traefik.http.routers.flaresolverr.middlewares: authelia@docker
      traefik.http.routers.flaresolverr.rule: Host(`flaresolverr.${DOMAIN:?no domain defined}`)
      traefik.http.services.flaresolverr.loadbalancer.server.port: 8191
    restart: unless-stopped
  gluetun:
    cap_add:
      - NET_ADMIN
    container_name: gluetun
    devices:
      - /dev/net/tun
    dns:
      - 1.1.1.1
      - 8.8.8.8
    environment:
      <<: *a1
      OPENVPN_PASSWORD: ${OPENVPN_PASSWORD:?password not defined}
      OPENVPN_USER: ${OPENVPN_USER:?user not defined}
      SERVER_NAMES: ${OPENVPN_SERVERS:?servers not defined}
      VPN_SERVICE_PROVIDER: ${OPENVPN_PROVIDER:?provider not defined}
    image: qmcgaw/gluetun
    labels:
      homepage.description: VPN client for containers
      homepage.group: Media
      homepage.href: https://gluetun.${DOMAIN:?no domain defined}/v1/publicip/ip
      homepage.icon: gluetun
      homepage.name: Gluetun
      homepage.widget.fields: '["public_ip", "region", "country"]'
      homepage.widget.type: gluetun
      homepage.widget.url: http://gluetun:8000
      traefik.enable: true
      traefik.http.routers.gluetun.rule: Host(`gluetun.${DOMAIN:?no domain defined}`)
      traefik.http.services.gluetun.loadbalancer.server.port: 8000
    ports:
      - 6881:6881
      - 6881:6881/udp
      - 10095:10095
    restart: always
    volumes:
      - /dev/net/tun:/dev/net/tun
      - ${DATA_PATH:?data path not defined}/gluetun:/gluetun
  jellyfin:
    container_name: jellyfin
    devices:
      - /dev/dri
    environment:
      <<: *a1
      JELLYFIN_PublishedServerUrl: https://jellyfin.${DOMAIN:?no domain defined}
    extra_hosts:
      - host.docker.internal:host-gateway
    image: jellyfin/jellyfin
    labels:
      homepage.description: Media Server
      homepage.group: Media
      homepage.href: https://jellyfin.${DOMAIN:?no domain defined}
      homepage.icon: jellyfin
      homepage.name: Jellyfin
      homepage.widget.enableNowPlaying: true
      homepage.widget.key: ${JELLYFIN_API_KEY:-}
      homepage.widget.streamOneStreamToTwoRows: true
      homepage.widget.type: jellyfin
      homepage.widget.url: http://${HOST_IP:?no host ip defined}:8096
      traefik.enable: true
      traefik.http.routers.jellyfin.rule: Host(`jellyfin.${DOMAIN:?no domain defined}`) || Host(`tv.${DOMAIN:?no domain defined}`)
      traefik.http.services.jellyfin.loadbalancer.server.port: 8096
      traefik.http.services.jellyfin.loadbalancer.server.url: http://127.0.0.1:8096
    network_mode: host
    restart: unless-stopped
    volumes:
      - ${DATA_PATH:?data path not defined}/jellyfin:/config
      - ${MEDIA_PATH:-?media path not defined}:/media:ro
  lidarr:
    container_name: lidarr
    depends_on:
      prowlarr:
        condition: service_started
      qbittorrent:
        condition: service_started
    environment:
      <<: *a1
    image: lscr.io/linuxserver/lidarr
    labels:
      homepage.description: Personal Music Curator
      homepage.group: Media
      homepage.href: https://lidarr.${DOMAIN:?no domain defined}
      homepage.icon: lidarr
      homepage.name: Lidarr
      homepage.widget.key: ${LIDARR_API_KEY:-}
      homepage.widget.type: lidarr
      homepage.widget.url: http://lidarr:8686
      traefik.enable: true
      traefik.http.routers.lidarr.middlewares: authelia@docker
      traefik.http.routers.lidarr.rule: Host(`lidarr.${DOMAIN:?no domain defined}`)
      traefik.http.services.lidarr.loadbalancer.server.port: 8686
    restart: unless-stopped
    volumes:
      - ${DATA_PATH:?data path not defined}/lidarr:/config
      - ${MEDIA_PATH:-?media path not defined}/downloads:/downloads
      - ${MEDIA_PATH:-?media path not defined}/music:/music
  navidrome:
    container_name: navidrome
    environment:
      <<: *a1
    image: deluan/navidrome
    labels:
      homepage.description: Personal Music Streamer
      homepage.group: Media
      homepage.href: https://navidrome.${DOMAIN:?no domain defined}
      homepage.icon: navidrome
      homepage.name: Navidrome
      homepage.widget.salt: ${NAVIDROME_API_SALT:-}
      homepage.widget.token: ${NAVIDROME_API_TOKEN:-}
      homepage.widget.type: navidrome
      homepage.widget.url: http://navidrome:4533
      homepage.widget.user: ${NAVIDROME_API_USER:-}
      traefik.enable: true
      traefik.http.routers.navidrome.middlewares: authelia@docker
      traefik.http.routers.navidrome.rule: Host(`navidrome.${DOMAIN:?no domain defined}`) || Host(`music.${DOMAIN:?no domain defined}`)
      traefik.http.services.navidrome.loadbalancer.server.port: 4533
    restart: unless-stopped
    volumes:
      - ${DATA_PATH:?data path not defined}/navidrome:/data
      - ${MEDIA_PATH:-?media path not defined}/music:/music:ro
  overseerr:
    container_name: overseerr
    environment:
      <<: *a1
    image: lscr.io/linuxserver/overseerr
    labels:
      homepage.description: Media Server Request Management
      homepage.group: Media
      homepage.href: https://overseerr.${DOMAIN:?no domain defined}
      homepage.icon: overseerr
      homepage.name: overseerr
      homepage.widget.key: ${OVERSEERR_API_KEY:-}
      homepage.widget.type: overseerr
      homepage.widget.url: http://overseerr:5055
      traefik.enable: true
      traefik.http.routers.overseerr.rule: Host(`overseerr.${DOMAIN:?no domain defined}`) || Host(`requests.${DOMAIN:?no domain defined}`)
    ports:
      - 5055:5055
    restart: unless-stopped
    volumes:
      - ${DATA_PATH:?data path not defined}/overseerr:/config
  plex:
    container_name: plex
    devices:
      - /dev/dri
    environment:
      <<: *a1
      ADVERTISE_IP: http://${HOST_IP:?no host ip defined}:32400/
      UMASK_SET: 18
      VERSION: plexpass
    image: plexinc/pms-docker:plexpass
    labels:
      homepage.description: Media Server
      homepage.group: Media
      homepage.href: https://plex.${DOMAIN:?no domain defined}
      homepage.icon: plex
      homepage.name: Plex
      homepage.widget.fields: '["streams", "movies", "tv", "albums"]'
      homepage.widget.key: ${PLEX_API_KEY:-}
      homepage.widget.type: plex
      homepage.widget.url: http://${HOST_IP:?no host ip defined}:32400
      traefik.enable: true
      traefik.http.routers.plex.rule: Host(`plex.${DOMAIN:?no domain defined}`) || Host(`watchtower.${DOMAIN:?no domain defined}`)
      traefik.http.services.plex.loadbalancer.server.port: 32400
      traefik.http.services.plex.loadbalancer.server.url: http://127.0.0.1:32400
    network_mode: host
    restart: unless-stopped
    volumes:
      - ${DATA_PATH:?data path not defined}/plex:/config
      - ${MEDIA_PATH:-?media path not defined}:/media
      - /dev/shm/transcode:/transcode
  profilarr:
    container_name: profilarr
    image: santiagosayshey/profilarr
    labels:
      homepage.description: Profile Management for *arrs
      homepage.group: Media
      homepage.href: https://profilarr.${DOMAIN:?no domain defined}
      homepage.icon: profilarr
      homepage.name: Profilarr
      traefik.enable: true
      traefik.http.routers.profilarr.middlewares: authelia@docker
      traefik.http.routers.profilarr.rule: Host(`profilarr.${DOMAIN:?no domain defined}`)
      traefik.http.services.profilarr.loadbalancer.server.port: 6868
    restart: unless-stopped
    volumes:
      - ${DATA_PATH:?data path not defined}/profilarr:/config
  prowlarr:
    container_name: prowlarr
    environment:
      <<: *a1
    image: lscr.io/linuxserver/prowlarr
    labels:
      homepage.description: Indexer Manager for *arrs
      homepage.group: Media
      homepage.href: https://prowlarr.${DOMAIN:?no domain defined}
      homepage.icon: prowlarr
      homepage.name: Prowlarr
      homepage.widget.key: ${PROWLARR_API_KEY:-}
      homepage.widget.type: prowlarr
      homepage.widget.url: http://prowlarr:9696
      traefik.enable: true
      traefik.http.routers.prowlarr.middlewares: authelia@docker
      traefik.http.routers.prowlarr.rule: Host(`prowlarr.${DOMAIN:?no domain defined}`)
      traefik.http.services.prowlarr.loadbalancer.server.port: 9696
    restart: unless-stopped
    volumes:
      - ${DATA_PATH:?data path not defined}/prowlarr:/config
      - ${MEDIA_PATH:-?media path not defined}/downloads:/downloads
  qbittorrent:
    container_name: qbittorrent
    depends_on:
      gluetun:
        condition: service_healthy
    environment:
      <<: *a1
      WEBUI_PORT: 10095
    image: lscr.io/linuxserver/qbittorrent
    labels:
      homepage.description: BitTorrent client for ISOs
      homepage.group: Media
      homepage.href: https://qbittorrent.${DOMAIN:?no domain defined}
      homepage.icon: qbittorrent
      homepage.name: qBittorrent
      homepage.widget.fields: '["download", "upload", "seed", "leech"]'
      homepage.widget.password: ${QBITTORRENT_WEBUI_PASSWORD:?qbit password not defined}
      homepage.widget.type: qbittorrent
      homepage.widget.url: http://gluetun:10095
      homepage.widget.username: ${QBITTORRENT_WEBUI_USERNAME:?qbit username not defined}
      traefik.enable: true
      traefik.http.routers.qbittorrent.rule: Host(`qbittorrent.${DOMAIN:?no domain defined}`)
      traefik.http.services.qbittorrent.loadbalancer.server.port: 10095
    network_mode: service:gluetun
    restart: unless-stopped
    volumes:
      - ${DATA_PATH:?data path not defined}/qbittorrent:/config
      - ${MEDIA_PATH:-?media path not defined}/downloads:/downloads
  radarr:
    container_name: radarr
    depends_on:
      prowlarr:
        condition: service_started
      qbittorrent:
        condition: service_started
      sabnzbd:
        condition: service_started
    environment:
      <<: *a1
    image: lscr.io/linuxserver/radarr
    labels:
      homepage.description: Personal Movie Curator
      homepage.group: Media
      homepage.href: https://radarr.${DOMAIN:?no domain defined}
      homepage.icon: radarr
      homepage.name: Radarr
      homepage.widget.key: ${RADARR_API_KEY:-}
      homepage.widget.type: radarr
      homepage.widget.url: http://radarr:7878
      traefik.enable: true
      traefik.http.routers.radarr.middlewares: authelia@docker
      traefik.http.routers.radarr.rule: Host(`radarr.${DOMAIN:?no domain defined}`)
      traefik.http.services.radarr.loadbalancer.server.port: 7878
    restart: unless-stopped
    volumes:
      - ${DATA_PATH:?data path not defined}/radarr:/config
      - ${MEDIA_PATH:-?media path not defined}/downloads:/downloads
      - ${MEDIA_PATH:-?media path not defined}/movies:/movies
  sabnzbd:
    container_name: sabnzbd
    environment:
      <<: *a1
    image: lscr.io/linuxserver/sabnzbd
    labels:
      homepage.description: Binary Newsreader
      homepage.group: Media
      homepage.href: https://sabnzbd.${DOMAIN:?no domain defined}
      homepage.icon: sabnzbd
      homepage.name: sabnzbd
      homepage.widget.key: ${SABNZBD_API_KEY:-}
      homepage.widget.type: sabnzbd
      homepage.widget.url: http://sabnzbd:8080
      traefik.enable: true
      traefik.http.routers.sabnzbd.middlewares: authelia@docker
      traefik.http.routers.sabnzbd.rule: Host(`sabnzbd.${DOMAIN:?no domain defined}`)
      traefik.http.services.sabnzbd.loadbalancer.server.port: 8080
    restart: unless-stopped
    volumes:
      - ${DATA_PATH:?data path not defined}/sabnzbd:/config
      - ${MEDIA_PATH:-?media path not defined}/downloads:/downloads
  sonarr:
    container_name: sonarr
    depends_on:
      prowlarr:
        condition: service_started
      qbittorrent:
        condition: service_started
      sabnzbd:
        condition: service_started
    environment:
      <<: *a1
    image: lscr.io/linuxserver/sonarr
    labels:
      homepage.description: Personal Series Curator
      homepage.group: Media
      homepage.href: https://sonarr.${DOMAIN:?no domain defined}
      homepage.icon: sonarr
      homepage.name: Sonarr
      homepage.widget.key: ${SONARR_API_KEY:-}
      homepage.widget.type: sonarr
      homepage.widget.url: http://sonarr:8989
      traefik.enable: true
      traefik.http.routers.sonarr.middlewares: authelia@docker
      traefik.http.routers.sonarr.rule: Host(`sonarr.${DOMAIN:?no domain defined}`)
      traefik.http.services.sonarr.loadbalancer.server.port: 8989
    restart: unless-stopped
    volumes:
      - ${DATA_PATH:?data path not defined}/sonarr:/config
      - ${MEDIA_PATH:-?media path not defined}/downloads:/downloads
      - ${MEDIA_PATH:-?media path not defined}/series:/series
  tautulli:
    container_name: tautulli
    image: lscr.io/linuxserver/tautulli
    labels:
      homepage.description: Media Server Companion
      homepage.group: Media
      homepage.href: https://tautulli.${DOMAIN:?no domain defined}
      homepage.icon: tautulli
      homepage.name: Tautulli
      homepage.widget.key: ${TAUTULLI_API_KEY:-}
      homepage.widget.type: tautulli
      homepage.widget.url: http://tautulli:8181
      traefik.enable: true
      traefik.http.routers.tautulli.rule: Host(`tautulli.${DOMAIN:?no domain defined}`)
    ports:
      - 8181:8181
    restart: unless-stopped
    volumes:
      - ${DATA_PATH:?data path not defined}/tautulli:/config
  unpackerr:
    container_name: unpackerr
    environment:
      <<: *a1
      UN_DEBUG: false
      UN_DIR_MODE: 0755
      UN_FILE_MODE: 0644
      UN_FOLDER_0_DELETE_AFTER: 10m
      UN_FOLDER_0_DELETE_FILES: false
      UN_FOLDER_0_DELETE_ORIGINAL: false
      UN_FOLDER_0_EXTRACT_PATH: /downloads
      UN_FOLDER_0_MOVE_BACK: false
      UN_FOLDER_0_PATH: /downloads
      UN_INTERVAL: 2m
      UN_MAX_RETRIES: 3
      UN_PARALLEL: 1
      UN_RETRY_DELAY: 5m
      UN_START_DELAY: 1m
    image: golift/unpackerr
    restart: unless-stopped
    volumes:
      - ${MEDIA_PATH:-?media path not defined}/downloads:/downloads
  wizarr:
    container_name: wizarr
    environment:
      <<: *a1
      DISABLE_BUILTIN_AUTH: false
    image: ghcr.io/wizarrrr/wizarr
    labels:
      traefik.enable: true
      traefik.http.routers.wizarr.rule: Host(`wizarr.${DOMAIN:?no domain defined}`) || Host(`join.${DOMAIN:?no domain defined}`)
    ports:
      - 5690:5690
    restart: unless-stopped
    volumes:
      - ${DATA_PATH:?data path not defined}/wizarr/database:/data/database
      - ${DATA_PATH:?data path not defined}/wizarr/wizard:/data/wizard_steps