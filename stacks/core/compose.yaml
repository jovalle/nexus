networks:
  core:
    driver: bridge
    name: core
  database:
    driver: bridge
    name: database
  log:
    driver: bridge
    name: log
  media:
    driver: bridge
    name: media
  security:
    driver: bridge
    name: security
  server:
    driver: bridge
    name: server
  tools:
    driver: bridge
    name: tools
services:
  adguard:
    container_name: adguard
    dns:
      - 76.76.2.2
      - 76.76.10.2
    hostname: adguard
    image: adguard/adguardhome
    labels:
      homepage.description: Ad-Blocking DNS Server
      homepage.group: Core
      homepage.href: https://starport.${DOMAIN:?no domain defined}
      homepage.icon: adguard-home
      homepage.name: AdGuard Home (Secondary)
      homepage.widget.password: ${ADMIN_PASSWORD:?admin password not defined}
      homepage.widget.type: adguard
      homepage.widget.url: http://adguard
      homepage.widget.username: ${ADMIN_USERNAME:?admin username not defined}
      traefik.enable: true
      traefik.http.routers.adguard.entrypoints: websecure
      traefik.http.routers.adguard.rule: Host(`starport.${DOMAIN:?no domain defined}`)
      traefik.http.routers.adguard.tls: true
      traefik.http.services.adguard.loadbalancer.server.port: 80
    networks:
      - core
    ports:
      - 53:53/tcp
      - 53:53/udp
      - 853:853/tcp
      - 853:853/udp
      - 3000:3000/tcp
      - 5443:5443/tcp
      - 5443:5443/udp
      - 6060:6060/tcp
    restart: unless-stopped
    volumes:
      - /mnt/data/docker/adguard/conf:/opt/adguardhome/conf
      - /mnt/data/docker/adguard/work:/opt/adguardhome/work
  docker-socket-proxy:
    container_name: proxy
    environment:
      CONTAINERS: 1
      POST: 0
      SERVICES: 1
      TASKS: 1
    image: ghcr.io/tecnativa/docker-socket-proxy
    ports:
      - 0.0.0.0:2375:2375
    restart: unless-stopped
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
  homepage:
    container_name: homepage
    environment:
      HOMEPAGE_ALLOWED_HOSTS: homepage.${DOMAIN:?no domain defined}
    image: ghcr.io/gethomepage/homepage
    labels:
      traefik.enable: true
      traefik.http.routers.homepage.rule: Host(`homepage.${DOMAIN:?no domain defined}`)
    networks:
      - core
      - database
      - log
      - media
      - security
      - server
      - tools
    ports:
      - 3001:3000
    restart: unless-stopped
    volumes:
      - /mnt/data/docker/homepage:/app/config
      - /var/run/docker.sock:/var/run/docker.sock:ro
  portainer:
    command: -H unix:///var/run/docker.sock --admin-password "${PORTAINER_ADMIN_PASSWORD_HASH:?password hash not defined}"
    container_name: portainer
    image: portainer/portainer-ce
    labels:
      homepage.description: Container Management
      homepage.group: Core
      homepage.href: https://portainer.${DOMAIN:?no domain defined}
      homepage.icon: portainer
      homepage.name: Portainer
      homepage.widget.env: 1
      homepage.widget.fields: '["running", "stopped", "total"]'
      homepage.widget.key: ${PORTAINER_API_KEY:-}
      homepage.widget.type: portainer
      homepage.widget.url: http://portainer:9000
      traefik.enable: true
      traefik.http.routers.portainer.rule: Host(`portainer.${DOMAIN:?no domain defined}`)
      traefik.http.services.portainer.loadbalancer.server.port: 9000
    networks:
      - core
    ports:
      - 9999:9000
    restart: unless-stopped
    volumes:
      - /mnt/data/docker/portainer:/data
      - /var/run/docker.sock:/var/run/docker.sock
  traefik:
    command:
      - --api.dashboard=true
      - --api.insecure=true
      - --certificatesresolvers.letsencrypt.acme.dnschallenge.provider=cloudflare
      - --certificatesresolvers.letsencrypt.acme.dnschallenge.resolvers=1.1.1.1:53,8.8.8.8:53
      - --certificatesresolvers.letsencrypt.acme.storage=/letsencrypt/acme.json
      - --certificatesresolvers.letsencrypt.acme.dnschallenge=true
      - --entrypoints.web.address=:80
      - --entrypoints.web.http.redirections.entryPoint.scheme=https
      - --entrypoints.web.http.redirections.entryPoint.to=websecure
      - --entrypoints.websecure.address=:443
      - --entrypoints.websecure.http.tls=true
      - --entrypoints.websecure.http.tls.certResolver=letsencrypt
      - --entrypoints.websecure.http.tls.domains[0].main=${DOMAIN:?no domain defined}
      - --entrypoints.websecure.http.tls.domains[0].sans=*.${DOMAIN:?no domain defined}
      - --log.level=DEBUG
      - --providers.docker.exposedbydefault=true
      - --providers.docker=true
      - --serverstransport.insecureskipverify=true
    container_name: traefik
    environment:
      CLOUDFLARE_DNS_API_TOKEN: ${CLOUDFLARE_DNS_API_TOKEN:?cloudflare API token not defined}
      CLOUDFLARE_EMAIL: ${CLOUDFLARE_EMAIL:?cloudflare email not defined}
      TRAEFIK_CERTIFICATESRESOLVERS_LETSENCRYPT_ACME_EMAIL: ${CLOUDFLARE_EMAIL:?cloudflare email not defined}
    extra_hosts:
      - host.docker.internal:172.17.0.1
    image: traefik
    labels:
      homepage.description: Reverse proxy for exposing apps via HTTPS
      homepage.group: Core
      homepage.href: https://traefik.${DOMAIN:?no domain defined}
      homepage.icon: traefik
      homepage.name: Traefik
      homepage.widget.type: traefik
      homepage.widget.url: http://traefik:8080
      traefik.enable: true
      traefik.http.routers.dashboard.entrypoints: websecure
      traefik.http.routers.dashboard.rule: Host(`traefik.${DOMAIN:?no domain defined}`)
      traefik.http.routers.dashboard.service: api@internal
      traefik.http.routers.dashboard.tls: true
    networks:
      - core
      - database
      - log
      - media
      - security
      - server
      - tools
    ports:
      - 8081:8080
      - 8443:443
    restart: unless-stopped
    volumes:
      - /mnt/data/docker/letsencrypt:/letsencrypt
      - /var/run/docker.sock:/var/run/docker.sock:ro